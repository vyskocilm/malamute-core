################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
from . import utils
from . import destructors
libmalamute_destructors = destructors.lib

class MlmProto(object):
    """
    Set the content field, transferring ownership from caller
    """

    def __init__(self):
        """
        Create a new empty mlm_proto
        """
        p = utils.lib.mlm_proto_new()
        if p == utils.ffi.NULL:
            raise MemoryError("Could not allocate person")

        # ffi.gc returns a copy of the cdata object which will have the
        # destructor called when the Python object is GC'd:
        # https://cffi.readthedocs.org/en/latest/using.html#ffi-interface
        self._p = utils.ffi.gc(p, libmalamute_destructors.mlm_proto_destroy_py)

    def recv(self, input):
        """
        Receive a mlm_proto from the socket. Returns 0 if OK, -1 if
        there was an error. Blocks if there is no message waiting.
        """
        return utils.lib.mlm_proto_recv(self._p, input._p)

    def send(self, output):
        """
        Send the mlm_proto to the output socket, does not destroy it
        """
        return utils.lib.mlm_proto_send(self._p, output._p)

    def print_py(self):
        """
        Print contents of message to stdout
        """
        utils.lib.mlm_proto_print(self._p)

    def routing_id(self):
        """
        Get the message routing id, as a frame
        """
        return utils.lib.mlm_proto_routing_id(self._p)

    def set_routing_id(self, routing_id):
        """
        Set the message routing id from a frame
        """
        utils.lib.mlm_proto_set_routing_id(self._p, routing_id._p)

    def id(self):
        """
        Get the mlm_proto message id
        """
        return utils.lib.mlm_proto_id(self._p)

    def set_id(self, id):
        """
        Set the mlm_proto message id
        """
        utils.lib.mlm_proto_set_id(self._p, id)

    def command(self):
        """
        Get the mlm_proto message id as printable text
        """
        return utils.lib.mlm_proto_command(self._p)

    def address(self):
        """
        Get the address field
        """
        return utils.lib.mlm_proto_address(self._p)

    def set_address(self, address):
        """
        Set the address field
        """
        utils.lib.mlm_proto_set_address(self._p, utils.to_bytes(address))

    def stream(self):
        """
        Get the stream field
        """
        return utils.lib.mlm_proto_stream(self._p)

    def set_stream(self, stream):
        """
        Set the stream field
        """
        utils.lib.mlm_proto_set_stream(self._p, utils.to_bytes(stream))

    def pattern(self):
        """
        Get the pattern field
        """
        return utils.lib.mlm_proto_pattern(self._p)

    def set_pattern(self, pattern):
        """
        Set the pattern field
        """
        utils.lib.mlm_proto_set_pattern(self._p, utils.to_bytes(pattern))

    def subject(self):
        """
        Get the subject field
        """
        return utils.lib.mlm_proto_subject(self._p)

    def set_subject(self, subject):
        """
        Set the subject field
        """
        utils.lib.mlm_proto_set_subject(self._p, utils.to_bytes(subject))

    def content(self):
        """
        Get a copy of the content field
        """
        return utils.lib.mlm_proto_content(self._p)

    def get_content(self):
        """
        Get the content field and transfer ownership to caller
        """
        return utils.lib.mlm_proto_get_content(self._p)

    def set_content(self, content_p):
        """

        """
        utils.lib.mlm_proto_set_content(self._p, content_p._p)

    def sender(self):
        """
        Get the sender field
        """
        return utils.lib.mlm_proto_sender(self._p)

    def set_sender(self, sender):
        """
        Set the sender field
        """
        utils.lib.mlm_proto_set_sender(self._p, utils.to_bytes(sender))

    def tracker(self):
        """
        Get the tracker field
        """
        return utils.lib.mlm_proto_tracker(self._p)

    def set_tracker(self, tracker):
        """
        Set the tracker field
        """
        utils.lib.mlm_proto_set_tracker(self._p, utils.to_bytes(tracker))

    def timeout(self):
        """
        Get the timeout field
        """
        return utils.lib.mlm_proto_timeout(self._p)

    def set_timeout(self, timeout):
        """
        Set the timeout field
        """
        utils.lib.mlm_proto_set_timeout(self._p, timeout)

    def status_code(self):
        """
        Get the status_code field
        """
        return utils.lib.mlm_proto_status_code(self._p)

    def set_status_code(self, status_code):
        """
        Set the status_code field
        """
        utils.lib.mlm_proto_set_status_code(self._p, status_code)

    def status_reason(self):
        """
        Get the status_reason field
        """
        return utils.lib.mlm_proto_status_reason(self._p)

    def set_status_reason(self, status_reason):
        """
        Set the status_reason field
        """
        utils.lib.mlm_proto_set_status_reason(self._p, utils.to_bytes(status_reason))

    def amount(self):
        """
        Get the amount field
        """
        return utils.lib.mlm_proto_amount(self._p)

    def set_amount(self, amount):
        """
        Set the amount field
        """
        utils.lib.mlm_proto_set_amount(self._p, amount)

    def test(verbose):
        """
        Self test of this class.
        """
        utils.lib.mlm_proto_test(verbose)

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
